rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // Conversations collection
    match /conversations/{conversationId} {
      allow read: if request.auth != null && 
                   (request.auth.token.email_verified || resource.data.userId == request.auth.uid);

      allow create: if request.auth != null && 
                     (request.auth.token.email_verified || request.resource.data.userId == request.auth.uid);

      allow update, delete: if request.auth != null && 
                             (request.auth.token.email_verified && resource.data.userId == request.auth.uid);

      // Messages subcollection
      match /messages/{messageId} {
        allow read, write: if request.auth != null && 
                            (request.auth.token.email_verified || 
                             get(/databases/$(database)/documents/conversations/$(conversationId)).data.userId == request.auth.uid);
      }
    }

    // Users collection
    match /users/{userId} {
      // User can read their own data
      allow read: if request.auth != null && request.auth.uid == userId;

      // Allow initial data creation for new users - less restrictive
      allow create: if request.auth != null && request.auth.uid == userId;

      // Allow full access if email is verified
      allow update, delete: if request.auth != null && 
                    request.auth.uid == userId && 
                    (request.auth.token.email_verified || 
                     // Also allow if the document doesn't exist yet or was recently created
                     exists(/databases/$(database)/documents/users/$(userId)) == false ||
                     get(/databases/$(database)/documents/users/$(userId)).data.createdAt > (request.time.toMillis() - 300000)); // 5 minutes grace period
      
      // Memories subcollection - allow access even without email verification for all users
      match /memories/{memoryId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
} 